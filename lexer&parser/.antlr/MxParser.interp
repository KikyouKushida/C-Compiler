token literal names:
null
'int'
'void'
'bool'
'string'
'new'
'class'
'this'
'true'
'false'
'null'
'if'
'else'
'else if'
'break'
'continue'
'while'
'return'
null
null
'>'
'<'
'>='
'<='
'=='
'!='
'&'
'|'
'^'
'~'
'>>'
'<<'
'&&'
'||'
'!'
'='
'++'
'--'
')'
'('
']'
'['
'}'
'{'
'+'
'-'
'*'
'/'
'%'
':'
'?'
';'
','
'.'
null
null
null
null
null

token symbolic names:
null
Int
Void
Bool
String
New
Class
This
True
False
Null
If
Else
Else_if
Break
Continue
While
Return
Identifier
Integer
Greater
Less
GreaterEqual
LessEqual
Equal
NotEqual
BitwiseAnd
BitwiseOr
BitwiseXor
BitwiseNot
BitwiseRightShift
BitwiseLeftShift
LogicAnd
LogicOr
LogicNot
Assign
SelfIncrement
SelfDecrement
RightParenthesis
LeftParenthesis
RightBracket
LeftBracket
RightBrace
LeftBrace
Add
Substract
Multiply
Divide
Mod
Colon
QuestionMark
Semicolon
Comma
Member
WhiteSpace
Cstring
VarDef
ClassDef
FuncDef

rule names:
program


atn:
[4, 1, 58, 11, 2, 0, 7, 0, 1, 0, 5, 0, 4, 8, 0, 10, 0, 12, 0, 7, 9, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 56, 58, 10, 0, 5, 1, 0, 0, 0, 2, 4, 7, 0, 0, 0, 3, 2, 1, 0, 0, 0, 4, 7, 1, 0, 0, 0, 5, 3, 1, 0, 0, 0, 5, 6, 1, 0, 0, 0, 6, 8, 1, 0, 0, 0, 7, 5, 1, 0, 0, 0, 8, 9, 5, 0, 0, 1, 9, 1, 1, 0, 0, 0, 1, 5]